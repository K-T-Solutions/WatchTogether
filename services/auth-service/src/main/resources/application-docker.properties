spring.application.name=auth-service

# Database configuration
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# gRPC configuration
grpc.server.port=9090

# Kafka configuration
spring.kafka.consumer.group-id=auth-service-group
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

# Actuator для health checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Redis in docker network
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.ssl.enabled=false

# Mail settings (override via env in production)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:tenirey11@gmail.com}
spring.mail.password=${MAIL_PASSWORD:ztvlegvqdgcuqbfo}
spring.mail.protocol=${MAIL_PROTOCOL:smtp}
spring.mail.properties.mail.debug=${MAIL_DEBUG:true}
