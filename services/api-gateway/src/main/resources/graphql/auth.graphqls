
type Query {
    validateToken(token: String!): Boolean!

    sendEmailVerificationCode(userId: ID!): Boolean!

    verifyEmailCode(userId: ID!, code: String!): Boolean!

    checkIsEmailVerified(userId: ID!): Boolean!

    getUserCred(userId: ID!): UserCredResponse
}

type Mutation {
    register(login: String!, email: String!, password: String!): RegisterResponse!

    login(username: String!, password: String!): AuthenticationResponse!

    validateOtp(email: String!, code: String!): AuthenticationResponse! #TODO: мб улучшить тчобы не передавать почту по сети

    updateUserLogin(userId: ID!, newLogin: String!): UpdateUserCredResponse!

    updateUserEmail(userId: ID!, newLogin: String!): UpdateUserCredResponse!

    updateUserPassword(userId: ID!, oldPass: String!, newPass: String!): UpdateUserCredResponse!

    enableTwoFactor(userId: ID!): UpdateUserCredResponse!


}

type AuthenticationResponse {
    twoFactorRequired: Boolean!
    token: String # null if 2FA required
}

type RegisterResponse {
    result: Boolean!
    message: String
}

type UpdateUserCredResponse {
    message: String!
}

type UserCredResponse {
    login: String
    email: String
    emailVerified: Boolean
    enabled: Boolean
    createdAt: String
}

